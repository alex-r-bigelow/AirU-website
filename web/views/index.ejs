<!DOCTYPE html>
<html class="no-js" ng-app="sensors" >
  <head>
    <link rel="stylesheet" type="text/css" href="style.css"/>
    <script type="application/javascript" src="https://d3js.org/d3.v4.min.js"></script>
    <script type="application/javascript" src="https://code.jquery.com/jquery-3.1.1.min.js"></script>

    <!-- CSS -->
    <!-- <link rel="stylesheet" href="../bower_components/bootstrap/dist/css/bootstrap.css"/> -->
    <link rel="stylesheet" href="style.css"/>
    <!-- Holder JS -->
    <!-- <script src="../bower_components/holderjs/holder.js"></script> -->
    <!-- Google Maps API -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBviLZ4MyAyeEDxZnMnBlx3b_99rqQxOyk"></script>
    <!-- Modernizr -->
    <!-- <script src="/bower_components/modernizr/bin/modernizr"></script> -->
    <!-- JS Source -->
    <!-- <script src="../bower_components/jquery/jquery.js"></script> -->
    <script src="bower_components/angular/angular.js"></script>
    <!-- <script src="../bower_components/angular-route/angular-route.js"></script> -->
    <script src="bower_components/angularjs-geolocation/dist/angularjs-geolocation.min.js"></script>
    <!-- Angular Source -->
     <script src="./js/app.js"></script>
     <script src="./js/addCtrl.js"></script>
     <script src="./js/gservice.js"></script>
    <!-- <script type="application/javascript">
      <% console.log(Object.keys(this)); %>
      <% console.log(typeof serverState === 'undefined' ? 'undefined' : JSON.stringify(serverState, null, 4)); %>
      <% if(typeof serverState === 'undefined') { var serverState = {}; } %>
      <% if(serverState) { %>
      	window.serverState = JSON.parse(jQuery('<textarea/>').html('<%= JSON.stringify(serverState) %>').text());
      <% } else { %>
        window.serverState = {};
      <% } %>
    </script> -->
    <script type="application/javascript" src="script.js"></script>
  </head>
  <body ng-controller="addCtrl">
    <img src="logo.png" id="logo"/>
    <div id="map">
    </div>
    <div id="sidebar">
      <div id="hamburger">
        <img src="hamburger.svg"/>
      </div>
      <div id="content">
        <!-- <% if(serverState.user) { %>
          <form id="logout" action="/logout">
            <span>Logged in as <label id="currentUser"><%= serverState.user %></label></span>
            <input type="submit" value="Log out"/>
          </form>
          <hr/>
          <form id="registerDevice" action="/registerDevice" method="POST">
            <input type="text" name="mac_address" placeholder="Sensor MAC Address" required/>
            <input type="submit" value="Register Sensor"/>
          </form>
        <% } else { %>
          <form id="login" action="/sendtoken" method="POST">
            <input type="email" placeholder="Email Address" name="user" required/>
            <input type="submit" value="Log in / Register"/>
          </form>
        <% } %> -->
      </div>
    </div>
  </body>
  <script>

    function openWindow(id, infowindow, marker) {
      infowindow.open(marker.get('map'), marker);

      $.ajax({
        url: 'http://air.eng.utah.edu:8086/query',
//         url: 'http://locahost:8086/query',
        data: {
          db: 'defaultdb',
          q: "SELECT * FROM airQuality WHERE ID = '" + id  + "' LIMIT 100"
        },

        success: function(resultSensorData) {
          resultSensorData = resultSensorData.results[0].series[0];
          // console.log(resultSensorData);
          var margin = {
              top: 30,
              right: 20,
              bottom: 30,
              left: 50
          };

          var width = 600 - margin.left - margin.right;
          var height = 270 - margin.top - margin.bottom;

          var x = d3.scaleTime().range([0, width])
          var y = d3.scaleLinear().range([height, 0]);

          // Scale the range of the data
          x.domain(d3.extent(resultSensorData.values, function (d) {
              return new Date(d[resultSensorData.columns.indexOf('time')]);
          }));
          y.domain([0, d3.max(resultSensorData.values, function (d) {
              return d[resultSensorData.columns.indexOf('pm2.5 (ug/m^3)')];
          })]);
          var xAxis = d3.axisBottom(x).ticks(5);
          var yAxis = d3.axisLeft(y).ticks(5);

          var valueline = d3.line()
            .x(function (d) {
                return x(new Date(d[resultSensorData.columns.indexOf('time')]));
            })
            .y(function (d) {
                return y(d[resultSensorData.columns.indexOf('pm2.5 (ug/m^3)')]);
            });

          var container = d3.select(document.createElement("div"))
              .attr("width", 480)
              .attr("height", 320);

          // adds the svg attributes to container
          var svgContainer = container.append("svg")
              .attr("width", width + margin.left + margin.right)
              .attr("height", height + margin.top + margin.bottom)
              .append("g")
              .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

          svgContainer.append("path") // Add the valueline path.
              .attr("d", valueline(resultSensorData.values));

          svgContainer.append("g") // Add the X Axis
              .attr("class", "x axis")
              .attr("transform", "translate(0," + height + ")")
              .call(xAxis);

          svgContainer.append("g") // Add the Y Axis
              .attr("class", "y axis")
              .call(yAxis);

          infowindow.setContent(container.node().outerHTML);

        }

      });
    }


    function initMap() {

      var locations = [];

	    $.ajax({
	      // url: 'http://localhostw:8086/query',
	      url: 'http://air.eng.utah.edu:8086/query',
	      data: {
	        db: 'defaultdb',
	        q: 'SELECT * FROM airQuality WHERE time >= \'2017-02-01\' LIMIT 200'
          // q: 'SELECT * FROM airQuality WHERE time >= \'2017-02-01\' GROUP BY "ID" LIMIT 1'
	      },

        success: function (response) {
          response = response.results[0].series[0];
          console.log(response);
          var sensorInfoArray = [];

          for( var k = 0; k < response.values.length; k += 1) {
            var infoObject = {};

            for (var i = 0; i < response.columns.length; i += 1){
              infoObject[response.columns[i]] = response.values[k][i];
            }

            sensorInfoArray.push(infoObject);
          }


          // Produces markers for objects created from data, adds listeners for click function
          var image = 'purple_MarkerP.png';
          sensorInfoArray.forEach(function(item, index) {
	          console.log(item);
            if (item["Latitude"] !== null && item["Longitude"] !== null) {
//               console.log(item);
              var marker = new google.maps.Marker({
                position: {lat: parseFloat(item["Latitude"]), lng: parseFloat(item["Longitude"])}, map: window.testMap, icon: image
              });

              // //var contentBox = makeGraph(item, objectDictWTime);
              // // var contentBox = "Sensor: " + item["ID"] +"<br/>Air Quality (pm2.5): " + item["pm2.5 (ug/m^3)"];
              // var contentBox = ''
              // var infowindow = new google.maps.InfoWindow({content: contentBox});
              //
              // marker.addListener('click', function() {
              //   infowindow.open(marker.get('map'), marker);
              // });

              var infowindow = new google.maps.InfoWindow();
              infowindow.setContent('<p>Loading data...</p>');

              marker.addListener('click', function() {
                openWindow(item["ID"], infowindow, marker);
              });

            }
          });
        },

        error: function () {
          console.warn(arguments);
        }
      }); //close ajax
    }
  </script>

  <!-- <script async defer
    src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyDw1jMFlGG1jkK4-6PTleKwZ5MxJd9tPNw&callback=initMap">
  </script> -->
</html>
